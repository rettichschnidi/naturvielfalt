<?php

define('AREA_ACCESS', 'area access');
define('AREA_CREATE', 'area create');

/**********************************
 *  Hook implementations
 *********************************/

/**
 * Implements hook_help()
 *
 * @param $path
 * @param $arg
 * @return string
 */
function area_help($path, $arg) {
  switch ($path) {
    case "admin/help#area":
      return '<p>'.  t("Area module") .'</p>';
      break;
  }
}

/**
 * Implements hook_menu()
 *
 * @return array
 */
function area_menu() {
  $items['area'] = array(
    'title' => t('Areas'),
    'description' => t('List of areas'),
    'page callback' => 'show_area_search',
    'access arguments' => array(AREA_ACCESS),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'area.search.inc',
  );
  $items['area/%'] = array(
    'title' => t('Area'),
    'description' => t('View an area'),
    'page callback' => 'show_area',
    'page arguments' => array(1),
    'access arguments' => array(AREA_ACCESS),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'area.inc',
  );
  $items['area/%/normal'] = array(
    'title' => t('View'),
    'description' => t('View of an area'),
    'page callback' => 'show_area',
    'page arguments' => array(1),
    'access arguments' => array(AREA_ACCESS),
    'type' => MENU_DEFAULT_LOCAL_TASK | MENU_NORMAL_ITEM,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'area.inc',
    'weight' => 1
  );
  $items['area/%/gallery'] = array(
    'title' => t('Gallery'),
    'description' => t('View the area as a gallery of organisms'),
    'page callback' => 'area_gallery',
    'page arguments' => array(1),
    'access arguments' => array(AREA_ACCESS),
    'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'area.inc',
    'weight' => 2
  );
  $items['area/%/list'] = array(
    'title' => t('List'),
    'description' => t('View the area as a list of organisms'),
    'page callback' => 'area_list',
    'page arguments' => array(1),
    'access arguments' => array(AREA_ACCESS),
    'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'area.inc',
    'weight' => 3
  );
  $items['area/new'] = array(
    'title' => 'Create new area',
    'description' => 'Create an area',
    'page callback' => 'area_new',
    'access arguments' => array(AREA_CREATE),
    'type' => MENU_CALLBACK,
    'file' => 'area.new.inc',
  );
  $items['area/gmap_image_redirect/%'] = array(
    'title' => 'Redirect to Google Maps static image URL',
    'description' => 'Google Maps static image redirect',
    'page callback' => 'googlemaps_static_redirect',
    'page arguments' => array(2),
    'access arguments' => array(AREA_ACCESS),
    'type' => MENU_CALLBACK,
    'file' => 'area.search.inc',
  );
  $items['area/habitat_autocomplete'] = array(
    'title' => 'Habitat autocomplete',
    'page callback' => 'area_habitat_autocomplete',
    'access arguments' => array(AREA_CREATE),
    'type' => MENU_CALLBACK,
    'file' => 'area.ajax.inc',
  );
  $items['area/area_saved_autocomplete'] = array(
    'title' => 'Area autocomplete',
    'page callback' => 'area_saved_autocomplete',
    'access arguments' => array(AREA_CREATE),
    'type' => MENU_CALLBACK,
    'file' => 'area.ajax.inc',
  );
  $items['area/json'] = array(
    'title' => 'area information in json format',
    'page callback' => 'area_json',
    'access arguments' => array(AREA_ACCESS),
    'type' => MENU_CALLBACK,
    'file' => 'area.ajax.inc',
  );
  $items['area/getareas'] = array(
    'title' => 'area information in json format',
    'page callback' => 'get_areas',
    'access arguments' => array(AREA_ACCESS),
    'type' => MENU_CALLBACK,
    'file' => 'area.ajax.inc',
  );
  $items['area/datatable'] = array(
    'title' => 'area information in json format for datatable',
    'page callback' => 'area_datatable',
    'access arguments' => array(AREA_ACCESS),
    'type' => MENU_CALLBACK,
    'file' => 'area.ajax.inc',
  );

  return $items;
}

/**
 * Implements hook_theme()
 *
 * @return an array with theme template information
 */
function area_theme() {
  return array(
    'area.new' => array(
      'template' => 'area.new',
      'variables' => array()
    ),
    'area.search' => array(
      'template' => 'area.search',
      'variables' => array()
    ),
    'area.search.byMaps' => array(
      'template' => 'area.search.byMaps',
      'variables' => array()
    ),
    'area.search.byMaps.show' => array(
      'template' => 'area.search.byMaps.show',
      'variables' => array()
    ),
  );
}

function area_permission() {
  return array(
    AREA_ACCESS =>  array(
      'title' => t('can view areas'),
    ),
    AREA_CREATE =>  array(
      'title' => t('can create areas'),
    ),
  );
}

/**
 * Implements hook of gallery module to activate the gallery
 * functionality for area
 * 
 * @return array
 */
function area_gallery_types() {
  return array(
    'area' => array(
      'image_caption' => 'area_gallery_image_caption',
      'manage_title' => 'area_gallery_manage_title',
      'manage_description' => 'area_gallery_manage_description'
    ),
    'area_habitat' => array(
      'image_caption' => 'area_habitat_gallery_image_caption',
      'manage_title' => 'area_habitat_gallery_manage_title',
      'manage_description' => 'area_habitat_gallery_manage_description',
      'crosslinked' => false
    )
  );
}

/**
 * Helper function referenced in area_gallery_types to define the caption
 * for images added to areas
 * 
 * @param $id
 * @return string
 */
function area_gallery_image_caption($id) {
  return l(area_gallery_caption($id), 'area/'.$id, array('html' => true));
}

/**
 * Helper function referenced in area_gallery_types to define the title of 
 * the manage images page for areas
 * 
 * @param string $id
 *   The id of object
 * @return string
 */
function area_gallery_manage_title($id) {
  return t('Images of the area !title', array('!title' => '<em>'.area_gallery_caption($id).'</em>'));
}

/**
 * Helper function creating a generic caption for an area
 * 
 * @param string $id
 *   The id of object
 * @return string
 */
function area_gallery_caption($id) {
  $result = db_select('area', 'a')
    ->condition('id', $id)
    ->fields('a')
    ->execute()
    ->fetch();
  return $result->field_name.' <small>'.$result->locality.' '.$result->canton.', '.$result->country.'</small>';
}

/**
 * Helper function referenced in area_gallery_types to define the description of 
 * the manage images page for areas
 * 
 * @param string $id
 *   The id of object
 * @return string
 */
function area_gallery_manage_description($id) {
  return t('Add and edit generic images of this area.');
}

/**
 * Helper function referenced in area_gallery_types to define the caption
 * for images added to area habitats
 * 
 * @param $id
 * @return string
 */
function area_habitat_gallery_image_caption($id) {
  $result = db_select('area_habitat', 'ah')
    ->condition('id', $id)
    ->fields('ah')
    ->execute()
    ->fetch();
  return habitat_gallery_image_caption($result->habitat_id);
}

/**
 * Helper function referenced in area_gallery_types to define the title of 
 * the manage images page for area habitats
 * 
 * @param string $id
 *   The id of object
 * @return string
 */
function area_habitat_gallery_manage_title($id) {
  $result = db_select('area_habitat', 'ah')
    ->condition('id', $id)
    ->fields('ah')
    ->execute()
    ->fetch();
  return t('Images of the habitat !title<br>taken in the area !context', array(
    '!title' => '<em>'.habitat_gallery_caption($result->habitat_id).'</em>',
    '!context' => '<em>'.area_gallery_caption($result->area_id).'</em>'
  ));
}

/**
 * Helper function referenced in area_gallery_types to define the description of 
 * the manage images page for area habitats
 * 
 * @param string $id
 *   The id of object
 * @return string
 */
function area_habitat_gallery_manage_description($id) {
  return t('Add and edit images of the specified habitat located in the mentioned area.');
}

/**
 * Implements hook of gallery module to define the conversion of a area habitat
 * to the related habitat
 * 
 * @return array
 */
function area_gallery_type_conversions() {
  return array(
    array(
      array(
        'source' => 'area_habitat',
        'source_key' => 'habitat_id',
        'target' => 'habitat',
        'target_key' => 'id',
      )
    ),
    array(
      array(
        'source' => 'habitat',
        'source_key' => 'id',
        'target' => 'area_habitat',
        'target_key' => 'habitat_id',
      )
    )
  );
}

/**
 * Implements hook of gallery module to define the different category
 * conditions available for area types
 * 
 * @return array
 */
function area_gallery_category_conditions() {
  return array(
    'area' => array(
      'name' => t('Areas'),
      'type' => 'area'
    ),
  );
}

?>