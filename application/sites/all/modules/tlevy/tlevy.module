<?php 

function tlevy_help($path, $arg)
{
	return '<p>'. t("testing site tlevy") . '</p>';
}

/**
* Implements hook_block_info().
*/
function tlevy_block_info() {
	$blocks['tlevy'] = array(
    'info' => t('tlevy block'), //The name that will appear in the block list.
    'cache' => DRUPAL_CACHE_PER_ROLE, //Default
	);
	return $blocks;
}

function tlevy_contents($display){
	//Get today's date.
	$today = getdate();
	//Calculate the date a week ago.
	$start_time = mktime(0, 0, 0,$today['mon'],($today['mday'] - 7), $today['year']);
	//Get all posts from one week ago to the present.
	$end_time = time();
	
	$max_num = variable_get('tlevy_max', 3);
	
	$query = db_select('node', 'n')
	->fields('n', array('nid', 'title', 'created'))
	->condition('status', 1) //Published.
	->condition('created', array($start_time, $end_time), 'BETWEEN')
	->orderBy('created', 'DESC') //Most recent first.
// 	->range(0, $max_num)
// 	->execute();
	;
	
	if($display == 'block')
	{
		$query->range(0, $max_num);
	}
	
	return $query->execute();
}

/**
 * Implements hook_block_view().
 * 
 * Prepares the contents of the block.
 */
function tlevy_block_view($delta = '') {
  switch($delta){
    case 'tlevy':
      $block['subject'] = t('tlevy testing');
      if(user_access('access content')){
        //Use our custom function to retrieve data.
//         $result = tlevy_contents();
        //Array to contain items for the block to render.
//         $items = array();
        //Iterate over the resultset and format as links.
        $block['content'] = 'TLEVY testing module';
        $block['content']['posts'] = array(
    '#theme' => 'item_list__tlevy__block',
    '#items' => $items,
  ); 
        $block['content']['more'] = array(
            '#theme' => 'more_tlevy_posts',
            '#url' => 'tlevy',
            '#title' => t('See the full list of tlevy.'),
        );
        
//         foreach ($result as $node){
//           $items[] = array(
//             'data' => l($node->title, 'node/' . $node->nid),
//           ); 
//         }
      
//         if (empty($items)) { //No content in the last week.
//           $block['content'] = t('No posts available.');  
//         } 
//         else {
//           //Pass data through theme function.
//           $block['content'] = theme('item_list', array(
//             'items' => $items));
//         }
      }
  }
  return $block;
}


/**
 * Form function, called by drupal_get_form() 
 * in current_posts_menu().
 */
function tlevy_form($form, &$form_state) {
  $form['tlevy_max'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of posts'),
    '#default_value' => variable_get('tlevy_max', 3),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t('The maximum number of links to display in the block.'),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

function tlevy_menu() {
	$items = array();

	$items['admin/config/content/tlevy'] = array(
    'title' => 'tlevy',
    'description' => 'Configuration for tlevy module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tlevy_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
	);
	
	$items['tlevy'] = array(
	    'title' => 'tlevy',
	    'page callback' => '_tlevy_page',
	    'access arguments' => array('access tlevy content'),
	    'type' => MENU_CALLBACK, //Will appear in Navigation menu.
	);

	return $items;
}

function tlevy_form_validate($form, &$form_state){
	$max_num = $form_state['values']['tlevy_max'];
	if (!is_numeric($max_num)){
		form_set_error('tlevy_max', t('You must enter an integer for the maximum number of posts to display.'));
	}
	else if ($max_num <= 0){
		form_set_error('tlevy_max', t('Maximum number of posts to display must be positive.'));
	}
}

function tlevy_permission(){
	return array(
    'access tlevy content' => array(
      'title' => t('Access content for the tlevy module'),
	)
	);
}

function _tlevy_page() {
	$result = tlevy_contents('page');
	drupal_set_title('tlevy test title');
	//Array to contain items for the page to render.
	$items = array();
	//Iterate over the resultset and format as links.
	foreach ($result as $node) {
		$items[] = array(
    'data' => l($node->title, 'node/' . $node->nid),
		);
	}
	if (empty($items)) {
		//No content in the last week.
		$page_array['tlevy_arguments'] = array(
		//Title serves as page subtitle
	      '#title' => t('All posts from the last week'),
	      '#markup' => t('tlevy_page test site<br><br>tesdf'),
		);
		return $page_array;
	}
}


