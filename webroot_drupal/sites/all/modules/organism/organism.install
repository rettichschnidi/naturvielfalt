<?php
require_once dirname(__FILE__) . '/organism.drupalschema.inc';
/**
 * @file organism.install
 * @author Reto Schneider, 2012
 * @copyright 2011-2012 Naturwerk, Brugg
 */

/**
 * Implement hook_schema()
 *
 */
function organism_schema() {
	return organism_get_schema();
}
/**
 * Implement hook_install()
 *
 * Include all organisms.
 */
function organism_install() {
	$filenames = array(
		'organism_artgroup_attr.sql',
		'organism_artgroup_attr_subscription.sql',
		'organism_artgroup_attr_type.sql',
		'organism_artgroup_attr_values.sql',
		'organism_artgroup_detmethod.sql',
		'organism_artgroup_detmethod_subscription.sql',
		'organism_artgroup.sql',
		'organism_artgroup_subscription.sql',
		'organism_attribute.sql',
		'organism_attribute_value.sql',
		'organism_attribute_value_subscription.sql',
		'organism_classification_level.sql',
		'organism_classification.sql',
		'organism_classification_subscription.sql',
		'organism_lang.sql',
		'organism_synonym.sql',
		'organism.sql'
	);
	try {
		foreach ($filenames as $filename) {
			$fullPath = dirname(__FILE__) . '/sql/' . $filename;
			$dataInserts = file_get_contents($fullPath);
			if(!$dataInserts) {
				throw new Exception('Could not read file ' . $fullPath);
			}
			db_query($dataInserts);
		}
	} catch (Exception $e) {
		watchdog('organism', $filename . ': ' . $e->getMessage());
		drupal_set_message($filename . ': ' . $e->getMessage(), 'error');
	}
}

/**
* migrates the old scientific_names into the organism table
* (for fauna, lichens and mushrooms)
* the flora-part must be done by another (more complex) migration script 
*/
function organism_update_7104(){
	// make sure, this thing finishes... 
	set_time_limit(120);
	$txn = db_transaction();
	
	try{
		// get all entries that only have one scientific name
		$result = db_query('
			select organism_id, name from {organism_synonym}
				where organism_id in (
					select organism_id
				from {organism_synonym} 	
			group by organism_id having count(*) = 1);');
	
		/* 
		* move every scientific name into the organism table
		* and remove it from the old table
		*/ 
		foreach ($result as $record){

			$num_updated = db_update('organism')
				->fields(array(
					'scientific_name' => $record->name		
				))
				->condition('id', $record->organism_id, '=')
				->execute();
			
			if($num_updated != 1){
				throw new DrupalUpdateException(
					"Could not update scientific_name of organism_id: " 
					. $record->organism_id
				);
			}
			
			$rows_deleted = db_delete('organism_synonym')
				->condition('organism_id', $record->organism_id)
				->execute();
			
			if($rows_deleted != 1){
				throw new DrupalUpdateException(
					"Could not delete synonym of organism_id: " 
					. $record->organism_id
				);
			}
		}

	} catch(Exception $e){
		$txn->rollback();
		throw $e;
	}
}
?>
