<?php
/**
 * @file organism.module
 * @author Marco Zimmerli, 2011
 * @author Reto Schneider, 2012
 * @copyright 2011-2012 Naturwerk, Brugg
 */
/**********************************
 *  Hook implementations
 *********************************/

define('ACCESS_ORGANISMS', 'access content');

// Load gallery integration
module_load_include('inc', 'organism', 'organism.gallery');

/**
 * Implements hook_theme()
 *
 * publishes our template
 * @return an array with theme template information
 */
function organism_theme() {
	return array(
			'showcase_block' => array(
					'template' => 'organism_page',
					'variables' => array(
							'item' => NULL
					)
			)
	);
}

/**
 * Implements hook_menu()
 *
 * This makes it possible to visit the link example.com/organism.
 * It is also possible to create an URL like example.com/organism/42.
 * This would show the element with the ID 42.
 *
 * @return array
 */
function organism_menu() {
	$items['organism'] = array(
			'title' => t('Classifiers'),
			'page callback' => 'organism_show_classifiers',
			'access arguments' => array(
					ACCESS_ORGANISMS
			),
			'description' => t('List of classifiers'),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'organism.show.inc',
	);

	$items['organism/classification/%'] = array(
			'title' => t('Classification'),
			'page arguments' => array(
					2
			),
			'page callback' => 'organism_show_classification',
			'access arguments' => array(
					ACCESS_ORGANISMS
			),
			'description' => t('List of organisms classifications'),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'organism.show.inc',
	);

	$items['organism/json'] = array(
			'title' => t('Organisms JSON'),
			'page callback' => 'organism_show_classifiers_json',
			'access arguments' => array(
					ACCESS_ORGANISMS
			),
			'description' => t('Json of classifiers'),
			'type' => MENU_CALLBACK,
			'file' => 'organism.json.inc',
	);

	$items['organism/classification/%/classificationjson'] = array(
			'title' => t('Classifications json'),
			'page arguments' => array(
					2
			),
			'page callback' => 'organism_show_classification_classificationjson',
			'access arguments' => array(
					ACCESS_ORGANISMS
			),
			'description' => t('List of subclassifications'),
			'type' => MENU_CALLBACK,
			'file' => 'organism.json.inc',
	);

	$items['organism/classification/%/organismjson'] = array(
			'title' => t('Organisms withing a classifications json'),
			'page arguments' => array(
					2
			),
			'page callback' => 'organism_show_classification_organismjson',
			'access arguments' => array(
					ACCESS_ORGANISMS
			),
			'description' => t('List of organisms with this classifications'),
			'type' => MENU_CALLBACK,
			'file' => 'organism.json.inc',
	);

	$items['organism/%organism'] = array(
			'title' => t('Basisinfo'),
			'page callback' => 'organism_show_organism',
			'page arguments' => array(
					1
			),
			'access arguments' => array(
					ACCESS_ORGANISMS
			),
			'description' => t('Specific organism'),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'organism.show.inc',
	);

	$items['organism/%organism/normal'] = array(
			'title' => 'Basisinfo',
			'description' => 'Show organism',
			'page callback' => 'organism_show',
			'page arguments' => array(
					1
			),
			'access arguments' => array(
					ACCESS_ORGANISMS
			),
			'type' => MENU_DEFAULT_LOCAL_TASK | MENU_NORMAL_ITEM,
			'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
			'file' => 'organism.show.inc',
	);

	$items['organism/%organism/lexikon'] = array(
			'title' => t('Lexikon'),
			'description' => 'Show organism lexika',
			'page callback' => 'organism_lexika_show',
			'page arguments' => array(
					1
			),
			'access arguments' => array(
					ACCESS_ORGANISMS
			),
			'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
			'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
			'file' => 'organism.lexika.inc',
	);

	$items['organism/%organism/json'] = array(
			'title' => t('Organism json'),
			'page arguments' => array(
					1
			),
			'page callback' => 'organism_show_organism_json',
			'access arguments' => array(
					ACCESS_ORGANISMS
			),
			'description' => t('Specific organism json'),
			'type' => MENU_CALLBACK,
			'file' => 'organism.json.inc',
	);

	$items['organism/search/json'] = array(
			'title' => t('Organism search json'),
			'page callback' => 'organism_search_organism_json',
			'access arguments' => array(
					ACCESS_ORGANISMS
			),
			'description' => t('Specific organism json'),
			'type' => MENU_CALLBACK,
			'file' => 'organism.json.inc',
	);

	$items['organism/%/edit'] = array(
			'title' => t('File upload'),
			'description' => t('Delete or edit files'),
			'page callback' => 'drupal_get_form',
			'page arguments' => array(
					'organism_edit_files_form',
					1
			),
			'access arguments' => array(
					'organism upload'
			),
			'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
			'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
			'file' => 'organism.edit.inc',
			'weight' => 10,
	);

// 	if (function_exists('gallery_list_renderer')) {
// 		$items['organism/%organism/reference/gallery'] = array(
// 				'title' => t('Gallery'),
// 				'description' => t(
// 					'View the organism as a gallery of organism pictures'),
// 				'page callback' => 'organism_reference_gallery',
// 				'page arguments' => array(
// 						1
// 				),
// 				'access arguments' => array(
// 						AREA_ACCESS
// 				),
// 				'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
// 				'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
// 				'file' => 'organism.inc',
// 				'weight' => 6
// 		);

// 		$items['organism/%organism/reference/list'] = array(
// 				'title' => t('List'),
// 				'description' => t(
// 					'View the organism as a list of organism pictures'),
// 				'page callback' => 'organism_reference_list',
// 				'page arguments' => array(
// 						1
// 				),
// 				'access arguments' => array(
// 						AREA_ACCESS
// 				),
// 				'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
// 				'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
// 				'file' => 'organism.inc',
// 				'weight' => 7
// 		);
// 	}
	return $items;
}

/**
 * Create an organism object with all data about an organism.
 * @note Does not include the classification data.
 *
 * Example:
 * $organism = array(
 * 		'scientific_names' => array(
 * 				'Acantholycosa pedestris',
 * 				'Acantholycosa pedestris v2'
 * 		),
 * 		'id' => 123,
 * 		'classification_name_translations' => array(
 * 				'de' => array(
 * 						'Schattenkraut',
 * 				),
 * 				'en' => array(
 * 						'Shadowherb'
 * 				)
 * 		),
 * 		'attributes' => array(
 * 				'author' => array(
 * 						'valuetype' => 't',
 * 						'values' => array(
 * 								'Reto'
 * 						),
 * 				),
 * 				'NUESP' => array(
 * 						'valuetype' => 'n',
 * 						'values' => array(
 * 								1234
 * 						),
 * 				)
 * 		),
 * );
 * @param $organismId
 * 	String which should contain an integer and represents the Id of the requested organism.
 */
function organism_load($organismId) {
	$result = db_query(
		"SELECT
			osn.name AS scientific_name,
			o.id AS organism_id,
			CASE
				WHEN oa.valuetype = 'b' THEN oav.boolean_value::text
				WHEN oa.valuetype = 't' THEN oav.text_value
				WHEN oa.valuetype = 'n' THEN oav.number_value::text
			END AS attribute_value,
			oa.name AS attribute_name,
			oa.comment AS attribute_comment,
			oa.valuetype AS attribute_valuetype,
			oa.id AS attribute_id,
			ol.name AS localized_name,
			ol.languages_language AS language
		FROM (
			SELECT
				id
			FROM
				{organism}
			WHERE
				id = :organismId) AS o
		JOIN {organism_scientific_name} osn ON osn.organism_id=o.id
		LEFT JOIN {organism_attribute_value_subscription} oavs ON oavs.organism_id = o.id
		LEFT JOIN {organism_attribute_value} oav ON oav.id=oavs.organism_attribute_value_id
		LEFT JOIN {organism_attribute} oa ON oa.id = oav.organism_attribute_id
		LEFT JOIN {organism_lang} ol ON ol.organism_id = o.id;",
		array(':organismId' => $organismId),
		array('fetch' => PDO::FETCH_ASSOC));
	$rows = $result->fetchAll();
	$organism = array();
	if (isset($rows[0]['scientific_name'])) {
		$organism['scientific_names'] = array();
	}

	foreach ($rows as $row) {
		if (!in_array($row['scientific_name'], $organism['scientific_names'])) {
			$organism['scientific_names'][] = $row['scientific_name'];
		}
		$organism['id'] = $row['organism_id'];
		// fetch all translations
		if (isset($row['localized_name'])) {
			$organism['classification_name_translations'][$row['language']][$row['localized_name']] = $row['localized_name'];
		}
		if (isset($row['attribute_name'])) {
			$organism['attributes'][$row['attribute_name']]['values'][$row['attribute_value']] = $row['attribute_value'];
			$organism['attributes'][$row['attribute_name']]['valuetype'] = $row['attribute_valuetype'];
			$organism['attributes'][$row['attribute_name']]['comment'] = $row['attribute_comment'];
		}
	}
	return $organism;
}

/**
 * Return an array that contains a table which shows all documents for this organism.
 * 
 * @param $organism_id
 * 	Integer containing the id of the desired organism.
 */
function organism_files($organism_id) {
	global $user;
	$render_array = array();
	$result = db_query(
		'SELECT
			file_managed_fid
		FROM
			{organism_file_managed} ofm
		WHERE
			organism_id = :oid',
		array(':oid' => $organism_id),
		array('fetch' => PDO::FETCH_ASSOC));
	return commonstuff_showfiles(
		'organism',
		$organism_id,
		$result->fetchAllKeyed(0, 0));
}
?>
