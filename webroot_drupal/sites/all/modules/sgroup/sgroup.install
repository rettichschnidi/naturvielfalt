<?php
/**
 * Implements hook_schema().
 */

/**
 * Create the tables needed to run this module.
 *
 * @see More information about the schema API: http://drupal.org/node/146843
 */
function sgroup_schema() {
	return array(
			'acl' => array(
					'fields' => array(
							'id' => array(
									'description' => 'Primary key for swissmon acl items',
									'type' => 'serial',
									'not null' => 'TRUE',
									'size' => 'big',
							),
							'description' => array(
									'description' => 'desccription of acl item',
									'type' => 'text',
							),
							'users_id' => array(
									'description' => 'foreign key for swissmon user id who created acl item',
									'type' => 'int',
									'default' => '0',
									'size' => 'big',
							),
					),
					'unique keys' => array(
							'id' => array(
									0 => 'id',
							),
					),
					'primary key' => array(
							0 => 'id',
					),
			),
			'acl_link' => array(
					'fields' => array(
							'id' => array(
									'description' => 'primary key of linking table',
									'type' => 'serial',
									'not null' => 'TRUE',
									'size' => 'big',
							),
							'level' => array(
									'description' => 'access level',
									'type' => 'int',
									'size' => 'small',
							),
							'acl_id' => array(
									'description' => 'Foreign key of acl id',
									'type' => 'int',
									'default' => '0',
									'size' => 'big',
							),
							'users_id' => array(
									'description' => 'foreign key for swissmon user id',
									'type' => 'int',
									'default' => '0',
									'size' => 'big',
							),
							'sgroup_id' => array(
									'description' => 'Foreign key of swissmon sgroup',
									'type' => 'int',
									'default' => '0',
									'size' => 'big',
							),
					),
					'primary key' => array(
							0 => 'id',
					),
					'foreign keys' => array(
							'acl_link_2_acl' => array(
									'table' => 'acl',
									'columns' => array(
											'acl_id' => 'id',
									),
							),
							'acl_link_2_sgroup' => array(
									'table' => 'sgroup',
									'columns' => array(
											'sgroup_id' => 'id',
									),
							),
					),
			),
			'sgroup' => array(
					'fields' => array(
							'id' => array(
									'description' => 'Primary key for swissmon groups',
									'type' => 'serial',
									'not null' => 'TRUE',
									'size' => 'big',
							),
							'name' => array(
									'description' => 'The name of the swissmon group',
									'type' => 'varchar',
									'size' => 'normal',
									'not null' => 'TRUE',
							),
							'description' => array(
									'description' => 'description of group',
									'type' => 'text',
							),
							'acl_id' => array(
									'description' => 'foreign key of natutvielfalt acl_id',
									'type' => 'int',
									'size' => 'big',
							),
							'users_id' => array(
									'description' => 'Foreign key of naturviefalt user_id (indicates owner of group)',
									'type' => 'int',
									'default' => '0',
									'size' => 'big',
							),
					),
					'unique keys' => array(
							'id' => array(
									0 => 'id',
							),
					),
					'primary key' => array(
							0 => 'id',
					),
					'foreign keys' => array(
							'sgroup_2_acl' => array(
									'table' => 'acl',
									'columns' => array(
											'acl_id' => 'id',
									),
							),
					),
			),
	);
}

/**
 * Implements hook_install();
 *
 * @todo Add missing foreign keys
 * Add group all to group table
 */
function sgroup_install() {
	$group_all_id = db_insert('sgroup')->fields(
			array('name' => 'All',
					'description' => 'All users (including authenticated and anonymous users)',
					'users_id' => 0,
					'acl_id' => 0
			))
		->execute();
	if ($group_all_id != NULL) {
		variable_set("ACL_GROUP_ALL_ID", $group_all_id);
	} else {
		drupal_set_message(
			t(
				'Error occured during creation of group "All". Try to uninstall and install the module again'),
			'error');
	}
}

/**
 * Implements hook_uninstall();
 *
 * This drops all tables defined in sgroup_schema().
 */
function sgroup_uninstall() {
	drupal_uninstall_schema('sgroup');
}
?>