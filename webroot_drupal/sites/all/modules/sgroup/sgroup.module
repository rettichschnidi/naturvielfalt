<?php
/**********************************
 *  Hook implementations
 *********************************/

/**
 * Implements hook_menu().
 * This hook enables modules to register paths in order to define how URL requests are handled. 
 * 
 * @see http://api.drupal.org/api/drupal/modules--system--system.api.php/function/hook_menu/7
 * @return associative array Define menu items and page callbacks.
 */
function sgroup_menu() {
	// only debug
	$items['sgroup/test'] = array(
			'title' => 'Test ACL',
			'description' => 'Test ACL functions and DB',
			'page callback' => 'run_acl_test',
			'access arguments' => array(
					'access sgroup'
			),
			'type' => MENU_LOCAL_TASK,
			'weight' => 5,
			'file' => 'sgroup.acl.test.inc',
	);
/*	$items['user/%user/sgroup'] = array(
			'title' => 'Groups',
			'description' => 'Shows ones groups',
			'page callback' => 'sgroup_overview',
			'access arguments' => array(
					'access sgroup'
			),
			'type' => MENU_LOCAL_TASK,
			'file' => 'sgroup.overview.inc'
	);
	$items['user/%user/sgroup/show'] = array(
			'title' => 'Show groups',
			'type' => MENU_DEFAULT_LOCAL_TASK,
			'weight' => -10,
	);
	$items['user/%user/sgroup/new'] = array(
			'title' => 'Create a new group',
			'description' => 'Create a new group',
			'page callback' => 'sgroup_new',
			'access arguments' => array(
					'access sgroup'
			),
			'type' => MENU_LOCAL_TASK,
			'weight' => 5,
			'file' => 'sgroup.new.inc',
	);
	$items['user/%user/sgroup/%/edit'] = array(
			'title' => 'Edit group',
			'description' => 'Edit group',
			'page callback' => 'sgroup_edit',
			'page arguments' => array(
					3
			),
			'access callback' => 'sgroup_edit_access',
			'access arguments' => array(
					3
			),
			'type' => MENU_NORMAL_ITEM,
			'file' => 'sgroup.edit.inc',
	);
	$items['sgroup/delete_member/%/%'] = array(
			'title' => 'JSON request to delete a member from a group',
			'page callback' => 'sgroup_delete_member',
			'page arguments' => array(
					2,
					3
			),
			'access callback' => 'sgroup_edit_access',
			'access arguments' => array(
					2
			),
			'type' => MENU_CALLBACK,
			'file' => 'sgroup.edit.inc',
	);
	*/
	return $items;
}

/**
 * Enables the administrator to allow or deny a usergroup or user to use this module
 * @see http://api.drupal.org/api/drupal/modules--system--system.api.php/function/hook_permission/7
 */
function sgroup_permission() {
	return array(
			'access sgroup' => array(
					'title' => t('Can view, create and manage swissmon groups')
			)
	);
}

/**
 * Allows an administrator of a group to edit his group
 */
/*
function sgroup_edit_access($sgroupId) {
	$access = user_access('access sgroup');
	// check if this user is administrator of the group
	global $user;
	$adminRecords = db_query('SELECT
				admin
			FROM
				sgroup_users
			WHERE
				sgid=:sgid AND
				uid=:uid', array(':sgid' => $sgroupId,
					':uid' => $user->uid
			));
	$admin = $adminRecords->fetch();
	$access = $access && $admin->admin == 1;
	return $access;
}
*/
?>