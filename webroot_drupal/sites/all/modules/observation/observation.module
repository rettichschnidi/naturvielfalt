<?php
/**********************************
 *  Hook implementations
 *********************************/

module_load_include('inc', 'observation');

// Load gallery integration
module_load_include('inc', 'observation', 'observation.gallery');
define('ACCESS_OBSERVATION', 'access observation');
define('CREATE_OBSERVATION', 'create observation');

/**
 * Implements hook_menu()
 *
 * @return array
 */
function observation_menu() {
	$items['observation/show'] = array(
			'title' => t('Observations'),
			'description' => t('Show all observations'),
			'page callback' => 'observation_show_all_observations',
			'access arguments' => array(
					ACCESS_OBSERVATION
			),
			'type' => MENU_NORMAL_ITEM | MENU_DEFAULT_LOCAL_TASK,
			'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
			'file' => 'observation.show.inc',
			'weight' => 1,
	);

	$items['observation/new'] = array(
			'title' => t('Create'),
			'description' => t('Create a new observation'),
			'page callback' => 'observation_new',
			'access arguments' => array(
					CREATE_OBSERVATION
			),
			'type' => MENU_NORMAL_ITEM | MENU_LOCAL_TASK,
			'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
			'file' => 'observation.inc',
			'weight' => 2,
	);
	$items['observation/%observation'] = array(
				'title' => t('Show'),
				'description' => t('Display an observation'),
				'page callback' => 'observation_show_observation',
				'page arguments' => array(
					1
				),
				'access arguments' => array(
					1
				),
				'access callback' => 'observation_read_access',
				'file' => 'observation.inc',
				'type' => MENU_SUGGESTED_ITEM,
				'weight' => 1
	);
	$items['observation/%observation/show'] = array(
			'title' => t('Show'),
			'description' => t('Display an observation'),
			'page callback' => 'observation_show_observation',
			'page arguments' => array(
					1
			),
			'access arguments' => array(
					1
			),
			'access callback' => 'observation_read_access',
			'file' => 'observation.inc',
			'type' => MENU_DEFAULT_LOCAL_TASK,
			'weight' => 1
	);
	$items['observation/%observation/edit'] = array(
			'title' => t('Edit'),
			'description' => t('Edit an observation'),
			'page callback' => 'observation_edit',
			'access arguments' => array(
					1
			),
			'page arguments' => array(
					1
			),
			'access callback' => 'observation_write_access',
			'file' => 'observation.inc',
			'type' => MENU_LOCAL_TASK,
			'weight' => 2
	);

	$items['observation/%observation/permissions'] = array(
			'title' => t('Permission'),
			'description' => t('Edit the permission of this observation.'),
			'page callback' => 'observation_edit_acl',
			'page arguments' => array(
					1
			),
			'access arguments' => array(
					1
			),
			'access callback' => 'observation_admin_access',
			'type' => MENU_LOCAL_TASK,
			'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
			'file' => 'observation.inc',
			'weight' => 4
	);
	$items['observation/%observation/delete'] = array(
			'title' => t('Delete'),
			'description' => t('Delete an existing observation.'),
			'page callback' => 'drupal_get_form',
			'page arguments' => array(
					'observation_delete_form',
					1
			),
			'access arguments' => array(
					1
			),
			'access callback' => 'observation_admin_access',
			'type' => MENU_LOCAL_TASK,
			'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
			'file' => 'observation.delete.inc',
			'weight' => 99
	);

	$items['observation/save'] = array(
			'title' => t('Save'),
			'description' => t('Save a new observation'),
			'page callback' => 'observation_save',
			'access arguments' => array(
					CREATE_OBSERVATION
			),
			'file' => 'observation.ajax.inc',
			'type' => MENU_CALLBACK,
	);
	$items['observation/%observation/save'] = array(
			'title' => t('Save'),
			'description' => t('Save a existing observation'),
			'page callback' => 'observation_save',
			'page arguments' => array(
					1
			),
			'access arguments' => array(
					1
			),
			'access callback' => 'observation_write_access',
			'file' => 'observation.ajax.inc',
			'type' => MENU_CALLBACK,
	);
	$items['observation/%observation/geometry/json'] = array(
			'title' => t('Geometry'),
			'description' => t('Get geometry data for editing'),
			'page callback' => 'observation_get_geometry_json',
			'page arguments' => array(
					1
			),
			'access arguments' => array(
					1
			),
			'access callback' => 'observation_write_access',
			'file' => 'observation.ajax.inc',
			'type' => MENU_CALLBACK,
	);
	$items['observation/geometry/json'] = array(
			'title' => t('Geometry'),
			'description' => t('Get all geometry data to show'),
			'page callback' => 'observation_get_geometry_json',
			'access arguments' => array(
					ACCESS_OBSERVATION
			),
			'file' => 'observation.ajax.inc',
			'type' => MENU_CALLBACK,
	);
	$items['observation/get/all'] = array(
			'title' => t('ObservationsJSON'),
			'description' => t('Get readable observations'),
			'page callback' => 'observation_get_all_json',
			'page arguments' => array(
					'ACL_READ'
			),
			'access arguments' => array(
					ACCESS_OBSERVATION
			),
			'file' => 'observation.ajax.inc',
			'type' => MENU_CALLBACK,
	);

	$items['observation/get/writeable'] = array(
			'title' => t('Writeable Observations JSON'),
			'description' => t('Get writeable observations'),
			'page callback' => 'observation_get_all_json',
			'page arguments' => array(
					'ACL_WRITE'
			),
			'access arguments' => array(
					ACCESS_OBSERVATION
			),
			'file' => 'observation.ajax.inc',
			'type' => MENU_CALLBACK,
	);

	/* Show some important information about an area. For usage in a infoWindow, ajax. */
	$items['observation/%observation/overview/ajaxform'] = array(
			'title' => t('observation overview form'),
			'page callback' => 'observation_overview_ajax_callback',
			'page arguments' => array(
					1
			),
			'access arguments' => array(
					1
			),
			'access callback' => 'observation_read_access',
			'type' => MENU_CALLBACK,
			'file' => 'observation.ajax.inc',
	);
	return $items;
}

/**
 * Default permission function
 *
 */
function observation_permission() {
	return array(
			ACCESS_OBSERVATION => array(
					'title' => t('can view observations'),
			),
			CREATE_OBSERVATION => array(
					'title' => t('can create observations'),
			),
	);
}

/**
 * Check if user has admin access to this observation
 *
 * @param array $observationdata
 * @return boolean true if access ok, false if not
 * @todo Implementation
 */
function observation_admin_access($observationdata = NULL) {
	if ($observationdata == NULL) {
		return false;
	}
	if (isset($observationdata['observation']['acl_id'])) {
		return check_permission(
			$observationdata['observation']['acl_id'],
			variable_get('ACL_ADMIN'));
	}
	return false;
}

/**
 * Check if user has write access to this observation
 *
 * @param array $observationdata
 * @return boolean true if access ok, false if not
 * @todo Implementation
 */
function observation_write_access($observationdata = NULL) {
	if ($observationdata == NULL || empty($observationdata)) {
		return false;
	}
	if (isset($observationdata['observation']['acl_id'])) {
		return check_permission(
			$observationdata['observation']['acl_id'],
			variable_get('ACL_WRITE'));
	}
	return false;
}

/**
 * Check if user has read access to this observation
 *
 * @param array $observationdata
 * @return boolean true if access ok, false if not
 * @todo Implementation
 */
function observation_read_access($observationdata = NULL) {
	if ($observationdata == NULL || empty($observationdata)) {
		return false;
	}
	if (isset($observationdata['observation']['acl_id'])) {
		return check_permission(
			$observationdata['observation']['acl_id'],
			variable_get('ACL_READ'));
	}
	return false;
}

/**
 * Return an array with all required information about an observation.
 * This will be called for menuitems like this: 'observation/%observation/editgeometry'
 * @param string $arg
 * 		This string *should* acutally be an integer
 * @return array $observationdata
 */
function observation_load($arg) {
	$observationdata = array();
	if ($arg != NULL && ((int) $arg) > 0) {
		$observationdata = observation_get($arg);
	}
	return $observationdata;
}

?>
