<?php
/**
 * @file commonstuff.module
 * @author Reto Schneider, 2012
 * @copyright 2012 Naturwerk, Brugg
 */

/**
 * Implements hook_theme()
 *
 * @return an array with theme template information
 */
function commonstuff_theme() {
	return array(
			'commonstuff.safetynet' => array(
					'template' => 'commonstuff.safetynet',
					'variables' => array(
							'warningmessage' => t('Your changes will be lost!'),
							'selector' => 'input,select,textarea'
					)
			)
	);
}

/**
 * Map the given mine-type to one where we have an icon for.
 * 
 * @param $filemime
 * 	String with the mine-type
 * @return
 * 	String with the simplified mime-type
 */
function commonstuff_get_icon_map($filemime) {
	switch ($filemime) {
	// Word document types.
	case 'application/msword':
	case 'application/vnd.ms-word.document.macroEnabled.12':
	case 'application/vnd.oasis.opendocument.text':
	case 'application/vnd.oasis.opendocument.text-template':
	case 'application/vnd.oasis.opendocument.text-master':
	case 'application/vnd.oasis.opendocument.text-web':
	case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
	case 'application/vnd.stardivision.writer':
	case 'application/vnd.sun.xml.writer':
	case 'application/vnd.sun.xml.writer.template':
	case 'application/vnd.sun.xml.writer.global':
	case 'application/vnd.wordperfect':
	case 'application/x-abiword':
	case 'application/x-applix-word':
	case 'application/x-kword':
	case 'application/x-kword-crypt':
		return 'x-office-document';

	// Spreadsheet document types.
	case 'application/vnd.ms-excel':
	case 'application/vnd.ms-excel.sheet.macroEnabled.12':
	case 'application/vnd.oasis.opendocument.spreadsheet':
	case 'application/vnd.oasis.opendocument.spreadsheet-template':
	case 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':
	case 'application/vnd.stardivision.calc':
	case 'application/vnd.sun.xml.calc':
	case 'application/vnd.sun.xml.calc.template':
	case 'application/vnd.lotus-1-2-3':
	case 'application/x-applix-spreadsheet':
	case 'application/x-gnumeric':
	case 'application/x-kspread':
	case 'application/x-kspread-crypt':
		return 'x-office-spreadsheet';

	// Presentation document types.
	case 'application/vnd.ms-powerpoint':
	case 'application/vnd.ms-powerpoint.presentation.macroEnabled.12':
	case 'application/vnd.oasis.opendocument.presentation':
	case 'application/vnd.oasis.opendocument.presentation-template':
	case 'application/vnd.openxmlformats-officedocument.presentationml.presentation':
	case 'application/vnd.stardivision.impress':
	case 'application/vnd.sun.xml.impress':
	case 'application/vnd.sun.xml.impress.template':
	case 'application/x-kpresenter':
		return 'x-office-presentation';

	// Compressed archive types.
	case 'application/zip':
	case 'application/x-zip':
	case 'application/stuffit':
	case 'application/x-stuffit':
	case 'application/x-7z-compressed':
	case 'application/x-ace':
	case 'application/x-arj':
	case 'application/x-bzip':
	case 'application/x-bzip-compressed-tar':
	case 'application/x-compress':
	case 'application/x-compressed-tar':
	case 'application/x-cpio-compressed':
	case 'application/x-deb':
	case 'application/x-gzip':
	case 'application/x-java-archive':
	case 'application/x-lha':
	case 'application/x-lhz':
	case 'application/x-lzop':
	case 'application/x-rar':
	case 'application/x-rpm':
	case 'application/x-tzo':
	case 'application/x-tar':
	case 'application/x-tarz':
	case 'application/x-tgz':
		return 'package-x-generic';

	// Script file types.
	case 'application/ecmascript':
	case 'application/javascript':
	case 'application/mathematica':
	case 'application/vnd.mozilla.xul+xml':
	case 'application/x-asp':
	case 'application/x-awk':
	case 'application/x-cgi':
	case 'application/x-csh':
	case 'application/x-m4':
	case 'application/x-perl':
	case 'application/x-php':
	case 'application/x-ruby':
	case 'application/x-shellscript':
	case 'text/vnd.wap.wmlscript':
	case 'text/x-emacs-lisp':
	case 'text/x-haskell':
	case 'text/x-literate-haskell':
	case 'text/x-lua':
	case 'text/x-makefile':
	case 'text/x-matlab':
	case 'text/x-python':
	case 'text/x-sql':
	case 'text/x-tcl':
		return 'text-x-script';

	// HTML aliases.
	case 'application/xhtml+xml':
		return 'text-html';

	// Executable types.
	case 'application/x-macbinary':
	case 'application/x-ms-dos-executable':
	case 'application/x-pef-executable':
		return 'application-x-executable';

	// PDF
	case 'application/pdf':
		return 'application-pdf';

	default:
		return $return;
	}
}

/**
 * Return an array that contains a table which shows all documents for the given file ids.
 *
 * @param $modulename
 * 	Sting which stores the name of the calling module, used to generate the urls
 * @param $id
 * 	Integer with the Id of the element the given files belongs to.
 * @param $fidarray
 * 	Array of integers which store the requested fids.
 * @return
 * 	A drupal form array with a table containing the 
 */
function commonstuff_showfiles($modulename, $id, $fidarray) {
	global $user;
	$render_array = array();
	if (empty($fidarray))
		return $render_array;
	$result = db_query(
		'SELECT
				*
			FROM
				{file_managed} fm
				JOIN {users} u ON fm.uid = u.uid
			WHERE
				fm.fid IN (:fids)',
		array(':fids' => $fidarray));
	foreach ($result as $record) {
		$mimeIconMap = array(
				'path' => drupal_get_path('module', 'inventory') . '/images/'
						. commonstuff_get_icon_map($record->filemime) . '.png',
				'alt' => $record->filemime,
				'title' => $record->filemime,
		);
		$img_mime = theme('image', $mimeIconMap);

		$description = isset($record->description) ? $record->description : '';
		$filename = l(
			$record->filename,
			"sites/default/files/naturvielfalt/$modulename/" . $id . '/'
					. $record->filename);
		$filemime = $img_mime;
		$filesize = ($record->filesize / 1000) . " KB";
		$timestamp = date('d.m.Y', $record->timestamp);
		$author = isset($record->author) ? $record->author : '';
		$row = array();
		$row[] = $description;
		$row[] = $filename;
		$row[] = $filemime;
		$row[] = $filesize;
		$row[] = $timestamp;
		$row[] = $author;
		$row[] = $record->name;
		$rows[] = $row;
	}

	$tableHeader[] = array(
			'name' => t('Description')
	);
	$tableHeader[] = array(
			'name' => t('Filename')
	);
	$tableHeader[] = array(
			'name' => t('Typ')
	);
	$tableHeader[] = array(
			'name' => t('Size')
	);
	$tableHeader[] = array(
			'name' => t('Date')
	);
	$tableHeader[] = array(
			'name' => t('Author')
	);
	$tableHeader[] = array(
			'name' => t('Owner')
	);

	$render_array = array(
			'#type' => 'fieldset',
			'#title' => t('Files'),
			'#collapsible' => TRUE,
			'#collapsed' => FALSE,
			'#attached' => array(
					'js' => array(
							'misc/form.js',
							'misc/collapse.js',
					),
			),
			'#attributes' => array(
					'class' => array(
							'collapsible'
					),
			),
	);

	$render_array['data'] = array(
			'#theme' => 'datatable',
			'#header' => $tableHeader,
			'#rows' => $rows,
			'#tableWidth' => 900,
			'#id_table' => 'files',
	);
	return $render_array;
}
?>
